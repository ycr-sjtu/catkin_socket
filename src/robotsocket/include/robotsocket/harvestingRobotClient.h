#ifndef HAVESTINGROBOTCLIENT_H
#define HAVESTINGROBOTCLIENT_H
#pragma once
#include <iostream>
#include "robotsocket/robotsocket.h"
using namespace std;

class HarvestingRobotClient:public RobotSocket{
    public:

        unsigned char harvestcmd[13]={0x3c, 0x30, 0x30, 0x7c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3e};
        char harvestrecv[94];
        // 功能00：心跳指令
        char harvestcmd0[13]={0x3c, 0x30, 0x30, 0x7c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3e};
        
        //  功能01：推杆伸出<01|10000000>；推杆缩回<01|20000000>；停止<01|00000000>
        char harvestcmd1_long[13] = {0x3c, 0x30, 0x31, 0x7c, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3e};
        char harvestcmd1_short[13] = {0x3c, 0x30, 0x31, 0x7c, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3e};
        char harvestcmd1_stop[13] = {0x3c, 0x30, 0x31, 0x7c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3e};
        
        // 功能02：电源开<02|10000000>；电源关<02|00000000>
        char harvestcmd2_on[13] = {0x3c, 0x30, 0x32, 0x7c, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3e};
        char harvestcmd2_off[13] = {0x3c, 0x30, 0x32, 0x7c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3e};
        
        // 功能03：整体上升<03|10000000>；上升停止<03|00000000>
        char harvestcmd3_up[13 ] = {0x3c, 0x30, 0x33, 0x7c, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3e};
        char harvestcmd3_up_stop[13] = {0x3c, 0x30, 0x33, 0x7c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3e};
       
        // 功能04：整体下降<04|10000000>；下降停止<04|00000000>
        char harvestcmd4_down[13] = {0x3c, 0x30, 0x34, 0x7c, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3e};
        char harvestcmd4_down_stop[13] = {0x3c, 0x30, 0x34, 0x7c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3e};

        // 功能05：设置两个履带电机<05|左电机转速右电机转速>
        char harvestcmd5[13] = {0x3c, 0x30, 0x35, 0x7c, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x64,0x3e};
        
        // 功能06：设置割刀和输送电机电压<06|割刀电机电压输送电机电压> 1v 1v测试
        unsigned char harvestcmd6[13] = {0X3c, 0x30, 0x36, 0x7c, 0x8c, 0xcc, 0x8c, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x3e};
        
        // 功能07：设置输送带电机<07|输送带电机电压备用> 1v测试
        unsigned char harvestcmd7[13] = {0X3c, 0x30, 0x36, 0x7c, 0x8c, 0xcc, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e};
        
        // 指令8：延长电机DO8使能（弃用，因为机械部分拆除）
        char harvestcmd8[13];
        
        // 指令9：驱动器复位<09|00000000>
        char harvestcmd9[13] = {0x3c, 0x30, 0x39, 0x7c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3e};
        
        // 指令10：驱动器初始化<10|00000000>
        char harvestcmd10[13] = {0x3c, 0x31, 0x30, 0x7c, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3e};
        
        // 指令11：ARM软件复位<11|00000000>
        char harvestcmd11[13] = {0x3c, 0x31, 0x31, 0x7c,  0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3e};
        
        // 心跳state=0; action state=1; vel state=2
        int harvest_state = 0;
        // 推杆 0停止 1伸出 2缩回
        int harvest_push_rod = 0;
        // 平台 1上升 2上升停止 3下降 4下降停止
        int harvest_platform = 0;
        // 传送带 电压0-10V
        double harvest_conveyor = 0;
        // 左右电机转速r/min
        int left_vel = 0;
        int right_vel = 0;
};

#endif